{"version":3,"sources":["contexts/ThemeContext.js","contexts/AuthContext.js","components/Navbar.js","components/BookList.js","components/ToggleButton.js","App.js","index.js"],"names":["ThemeContext","createContext","ThemeContextProvider","state","isLightTheme","light","syntax","ui","bg","dark","toggleTheme","setState","Provider","value","this","props","children","Component","AuthContext","AuthContextProvider","isAuthenticated","toggleAuth","Navbar","Consumer","authContext","themeContext","theme","style","background","color","onClick","BookList","context","className","contextType","ToggleButton","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+NAEaA,EAAeC,0BAqBbC,E,4MAjBXC,MAAQ,CACJC,cAAc,EACdC,MAAO,CAAEC,OAAQ,OAAQC,GAAI,OAAQC,GAAI,QACzCC,KAAM,CAAEH,OAAQ,OAAQC,GAAI,OAAQC,GAAI,S,EAE5CE,YAAc,WACV,EAAKC,SAAS,CAAGP,cAAe,EAAKD,MAAMC,gB,4CAE/C,WACI,OACI,cAACJ,EAAaY,SAAd,CAAuBC,MAAK,2BAAOC,KAAKX,OAAZ,IAAkBO,YAAaI,KAAKJ,cAAhE,SACKI,KAAKC,MAAMC,e,GAZOC,aCHtBC,EAAcjB,0BAmBZkB,E,4MAhBXhB,MAAQ,CACJiB,iBAAiB,G,EAErBC,WAAa,WACT,EAAKV,SAAS,CAAES,iBAAkB,EAAKjB,MAAMiB,mB,4CAEjD,WACI,OACI,cAACF,EAAYN,SAAb,CAAsBC,MAAK,2BAAOC,KAAKX,OAAZ,IAAkBkB,WAAYP,KAAKO,aAA9D,SACKP,KAAKC,MAAMC,e,GAVOC,aC6BpBK,EA5Bf,4JAEI,WACI,OACI,cAACJ,EAAYK,SAAb,UAAuB,SAACC,GAAD,OACnB,cAACxB,EAAauB,SAAd,UAAwB,SAACE,GAAkB,IAC/BL,EAAgCI,EAAhCJ,gBAAiBC,EAAeG,EAAfH,WACjBjB,EAA8BqB,EAA9BrB,aAAcC,EAAgBoB,EAAhBpB,MAAOI,EAASgB,EAAThB,KACvBiB,EAAQtB,EAAeC,EAAQI,EACrC,OACI,sBAAKkB,MAAO,CAAEC,WAAYF,EAAMnB,GAAIsB,MAAOH,EAAMpB,QAAjD,UACI,6CACA,qBAAKwB,QAAST,EAAd,SACMD,EAAkB,YAAa,eAErC,+BACI,sCACA,uCACA,yDAlBhC,GAA4BH,aCDfc,EAAb,4JAEI,WAAU,IAAD,EACiCjB,KAAKkB,QAAnC5B,EADH,EACGA,aAAcC,EADjB,EACiBA,MAAOI,EADxB,EACwBA,KACvBiB,EAAQtB,EAAeC,EAAQI,EACrC,OAEQ,qBAAKwB,UAAU,YAAYN,MAAO,CAACE,MAAMH,EAAMpB,OAAQsB,WAAYF,EAAMlB,IAAzE,SACI,+BACA,oBAAImB,MAAO,CAACC,WAAWF,EAAMnB,IAA7B,6BACA,oBAAIoB,MAAO,CAACC,WAAWF,EAAMnB,IAA7B,iBACA,oBAAIoB,MAAO,CAACC,WAAWF,EAAMnB,IAA7B,uCAXpB,GAA8BU,aAAjBc,EACFG,YAAclC,EAkBV+B,QCnBFI,EAAb,4JAEI,WAAU,IACEzB,EAAgBI,KAAKkB,QAArBtB,YACR,OACG,wBAAQoB,QAASpB,EAAjB,8BALX,GAAkCO,aAArBkB,EACFD,YAAclC,EASVmC,QCaAC,MAlBf,WAEC,OACC,qBAAKH,UAAU,MAAf,SAGC,cAAC,EAAD,UACA,eAAC,EAAD,WACC,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,Y,MCdJI,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.8a9bd32a.chunk.js","sourcesContent":["import React, { createContext, Component } from 'react';\r\n\r\nexport const ThemeContext = createContext();\r\n\r\n\r\nclass ThemeContextProvider extends Component {\r\n    state = {\r\n        isLightTheme: true,\r\n        light: { syntax: '#555', ui: '#ddd', bg: '#eee' },\r\n        dark: { syntax: '#ddd', ui: '#333', bg: '#555' }\r\n    }\r\n    toggleTheme = () => {\r\n        this.setState({  isLightTheme: !this.state.isLightTheme });\r\n    }\r\n    render() { \r\n        return (\r\n            <ThemeContext.Provider value={{ ...this.state,toggleTheme: this.toggleTheme}}>\r\n                {this.props.children}\r\n            </ThemeContext.Provider>\r\n        );\r\n    }\r\n}\r\n \r\nexport default ThemeContextProvider;","import React, { Component, createContext } from 'react';\r\n\r\nexport const AuthContext = createContext();\r\n\r\n class AuthContextProvider extends Component { \r\n    state = {\r\n        isAuthenticated: false\r\n    }\r\n    toggleAuth = () => {\r\n        this.setState({ isAuthenticated: !this.state.isAuthenticated });\r\n    }\r\n    render() {\r\n        return (\r\n            <AuthContext.Provider value={{ ...this.state,toggleAuth: this.toggleAuth }}>\r\n                {this.props.children}\r\n            </AuthContext.Provider>\r\n           \r\n        );\r\n    }\r\n}\r\n\r\nexport default AuthContextProvider\r\n","import React, { Component } from 'react';\r\nimport { ThemeContext } from '../contexts/ThemeContext';\r\nimport { AuthContext } from '../contexts/AuthContext';\r\n\r\n\r\nexport class Navbar extends Component {\r\n   \r\n    render() { \r\n        return (\r\n            <AuthContext.Consumer>{(authContext) => (\r\n                <ThemeContext.Consumer>{(themeContext) => {\r\n                    const { isAuthenticated, toggleAuth } = authContext;\r\n                    const { isLightTheme, light, dark } = themeContext;\r\n                    const theme = isLightTheme ? light : dark;\r\n                    return (\r\n                        <nav style={{ background: theme.ui, color: theme.syntax }}>\r\n                            <h1>Context App</h1>\r\n                            <div onClick={toggleAuth}>\r\n                                { isAuthenticated ? 'Logged In': 'Logged Out'}\r\n                            </div>\r\n                            <ul>\r\n                                <li>Home</li>\r\n                                <li>About</li>\r\n                                <li>Contact</li>\r\n                            </ul>\r\n                        </nav>   \r\n                )\r\n                }}</ThemeContext.Consumer>\r\n            )}</AuthContext.Consumer>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Navbar;\r\n\r\n\r\n//comments \r\n/* Using Two approaches for context */","import React, { Component } from 'react';\r\nimport { ThemeContext } from '../contexts/ThemeContext';\r\n\r\n\r\nexport class BookList extends Component {\r\n    static contextType = ThemeContext;\r\n    render() {\r\n        const { isLightTheme, light, dark } = this.context;\r\n        const theme = isLightTheme ? light : dark;\r\n        return (\r\n           \r\n                <div className=\"book-list\" style={{color:theme.syntax, background: theme.bg}}>\r\n                    <ul>\r\n                    <li style={{background:theme.ui}}>One Indian Girl</li>\r\n                    <li style={{background:theme.ui}}>Abc</li>\r\n                    <li style={{background:theme.ui}}>the final empire</li>\r\n                    </ul>\r\n                </div>\r\n            \r\n        )\r\n    }\r\n}\r\n\r\nexport default BookList;\r\n\r\n\r\n//comments \r\n/* Using Two approaches for context */","\r\nimport React, { Component } from 'react';\r\nimport { ThemeContext } from '../contexts/ThemeContext';\r\n\r\nexport class ToggleButton extends Component {\r\n    static contextType = ThemeContext;\r\n    render() {\r\n        const { toggleTheme } = this.context;\r\n        return (\r\n           <button onClick={toggleTheme}>Toggle Theme</button>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ToggleButton;\r\n","import React from 'react';\nimport Navbar from './components/Navbar';\nimport BookList from './components/BookList';\nimport ToggleButton from './components/ToggleButton';\nimport ThemeContextProvider from './contexts/ThemeContext';\nimport AuthContextProvider from './contexts/AuthContext';\n\n\n\nfunction App() {\n\t\n\treturn (\n\t\t<div className='App'>\n\t\t\t\n\t\t\t\n\t\t\t<AuthContextProvider>\n\t\t\t<ThemeContextProvider>\n\t\t\t\t<Navbar />\n\t\t\t\t<BookList />\n\t\t\t\t<ToggleButton />\n\t\t\t</ThemeContextProvider>\n\t\t\t</AuthContextProvider>\n\t\t\t\n\t\t</div>\n\t);\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}